@*Đánh số trang*@
@using xqmachine.Models.Helpers
@model PagedList.IPagedList
<ul class="pagination">
    @{
        var nvc = HttpUtility.ParseQueryString(Request.QueryString.ToString());
        nvc.Remove("page"); 
        foreach (var item in GetPagination())
        {
            var url = Url.Action(item.Action, item.Controller, new { page = item.Page }) + nvc.ToString();
            <li>
                <a class="@(item.IsActive ? "active" : item.Page <= 0 ? "disabled" : "")" href="@url">@item.Display</a>
            </li>
        }
    }
</ul>
@{
    List<Pagination> GetPagination()
    {
        var curPage = Model.PageNumber;
        var totalPage = Model.PageCount;
        var curController = ViewContext.RouteData.Values["controller"].ToString();
        var curAction = ViewContext.RouteData.Values["action"].ToString();

        var pager = new List<Pagination>();
        if (totalPage == 0)
        {
            return pager;
        }
        // Thêm phân trang cho trang hiện tại
        pager.Add(new Pagination
        {
            Controller = curController,
            Action = curAction,
            IsActive = true,
            Page = curPage,
            Display = curPage.ToString()
        });
        if (curPage + 1 <= totalPage)
        {
            // Thêm phân trang cho trang sau hiện tại
            pager.Add(new Pagination
            {
                Controller = curController,
                Action = curAction,
                IsActive = false,
                Page = curPage + 1,
                Display = (curPage + 1).ToString()
            });
            if (curPage + 1 < totalPage)
            {
                pager.Add(new Pagination
                {
                    Page = -1,
                    IsActive = false,
                    Display = "..."
                });
                pager.Add(new Pagination
                {
                    Controller = curController,
                    Action = curAction,
                    IsActive = false,
                    Page = totalPage,
                    Display = totalPage.ToString()
                });
            }
        }
        if (curPage - 2 >= 0)
        {
            pager.Insert(0, new Pagination
            {
                Controller = curController,
                Action = curAction,
                IsActive = false,
                Page = curPage - 1,
                Display = (curPage - 1).ToString()
            });
            if (curPage - 2 > 0)
            {
                pager.Insert(0, new Pagination
                {
                    Page = -1,
                    IsActive = false,
                    Display = "..."
                });
                pager.Insert(0, new Pagination
                {
                    Controller = curController,
                    Action = curAction,
                    IsActive = false,
                    Page = 1,
                    Display = "1"
                });
            }
        }
        return pager;
    }
}